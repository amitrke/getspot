rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // By default, deny all access.
    match /{document=**} {
      allow read, write: if false;
    }

    //--- COLLECTIONS ----//

    match /users/{userId} {
      allow read, update, create: if request.auth.uid == userId;
    }

    // New collection for simplified group lookups.
    // A user can only read their own list of groups.
    match /userGroupMemberships/{userId}/groups/{groupId} {
      allow read: if request.auth.uid == userId;
    }

    match /groups/{groupId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.admin;

      //--- SUBCOLLECTIONS ---//

      // Any member of a group can see the list of other members.
      match /members/{userId} {
        allow get, list: if exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid));
      }

      // Users can create their own join request.
      // Admin can list/update/delete all requests for their group.
      match /joinRequests/{userId} {
        allow get: if request.auth.uid == userId;
        allow create: if request.auth.uid == userId;
        allow list, update, delete: if request.auth.uid == get(/databases/$(database)/documents/groups/$(groupId)).data.admin;
      }
    }

    match /events/{eventId} {
      allow read: if exists(/databases/$(database)/documents/groups/$(resource.data.groupId)/members/$(request.auth.uid));
      allow create, update, delete: if request.auth.uid == get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.admin;

      //--- SUBCOLLECTIONS ---//

      match /participants/{userId} {
        allow read: if exists(/databases/$(database)/documents/groups/$(get(/databases/$(database)/documents/events/$(eventId)).data.groupId)/members/$(request.auth.uid));
        allow create: if request.auth.uid == userId && request.resource.data.status == 'requested';
        allow update: if request.auth.uid == userId;
      }
    }

    match /transactions/{transactionId} {
      allow read: if request.auth.uid == resource.data.uid;
      allow write: if false; // No client-side writes
    }
  }
}
