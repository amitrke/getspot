# .github/workflows/deploy-ios-testflight.yml
name: Manual iOS TestFlight Deployment

on:
  workflow_dispatch:
    inputs:
      baseVersion:
        description: 'Base App Version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-and-deploy:
    runs-on: macos-14
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # 3. Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ env.FLUTTER_HOME }}/bin/cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}

      # 4. Set version dynamically
      - name: Set version
        id: versioning
        run: |
          BASE_VERSION="${{ github.event.inputs.baseVersion }}"
          BUILD_NUMBER=${{ github.run_number }}
          FULL_VERSION="$BASE_VERSION+$BUILD_NUMBER"

          echo "Using version: $FULL_VERSION"
          sed -i.bak "s/^version: .*/version: $FULL_VERSION/" pubspec.yaml
          rm pubspec.yaml.bak

          echo "version=$FULL_VERSION" >> $GITHUB_OUTPUT

      # 5. Get dependencies
      - name: Flutter Pub Get
        run: flutter pub get

      # 6. Build the IPA without signing
      - name: Build Flutter IPA
        run: flutter build ipa --release --no-codesign

      # 7. Install Fastlane
      - name: Install Fastlane
        run: |
          sudo gem install fastlane -NV

      # 8. Prepare Fastlane App Store Connect API key
      - name: Prepare Fastlane API key
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_PRIVATE_KEY }}
        run: |
          mkdir -p fastlane
          cat <<EOF > fastlane/AppStoreConnectAPIKey.json
          {
            "key_id": "$APP_STORE_CONNECT_API_KEY_ID",
            "issuer_id": "$APP_STORE_CONNECT_API_ISSUER_ID",
            "key": "$APP_STORE_CONNECT_API_KEY",
            "in_house": false
          }
          EOF

      # 9. Upload IPA to TestFlight via Fastlane
      - name: Upload IPA to TestFlight
        env:
          APP_APPLE_ID: ${{ secrets.APP_APPLE_ID }}
        run: |
          fastlane pilot upload \
            --api_key_path fastlane/AppStoreConnectAPIKey.json \
            --ipa build/ios/ipa/Runner.ipa \
            --skip_submission true \
            --skip_waiting_for_build_processing true
