# This workflow builds and signs a Flutter Android app and deploys it to the Google Play Store.

name: Deploy Android to Google Play

on:
  workflow_dispatch: # Allows manual triggering of this workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Decode Keystore and Create key.properties
        working-directory: ./android
        run: |
          echo "${{ secrets.SIGNING_KEY_BASE64 }}" | base64 --decode > app/key.jks
          echo "storeFile=app/key.jks" > key.properties
          echo "keyAlias=${{ secrets.KEYALIAS }}" >> key.properties
          echo "keyPassword=${{ secrets.KEYPASSWORD }}" >> key.properties
          echo "storePassword=${{ secrets.KEYSTOREPASSWORD }}" >> key.properties

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Update Version Code
        run: |
          line=$(grep "version:" pubspec.yaml)
          versionName=$(echo "$line" | cut -d ' ' -f 2 | cut -d '+' -f 1)
          newVersionString="version: $versionName+${{ github.run_number }}"
          sed -i "s/$line/$newVersionString/" pubspec.yaml
          echo "Updated version to $newVersionString"

      - name: Build Android App Bundle
        run: flutter build appbundle

      - name: Upload to Google Play (Internal Track)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_SERVICE_ACCOUNT_JSON }}
          packageName: org.getspot
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
